-- MySQL Script generated by MySQL Workbench
-- Mon Sep 29 15:39:13 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema punto-de-venta-db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema punto-de-venta-db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `punto-de-venta-db` DEFAULT CHARACTER SET utf8 ;
USE `punto-de-venta-db` ;

-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`CategoriaProducto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`CategoriaProducto` (
  `IdCategoriaProducto` INT NOT NULL,
  `NombreCategoria` VARCHAR(100) NOT NULL,
  `Descripcion` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`IdCategoriaProducto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`Producto` (
  `IdProducto` INT NOT NULL,
  `CategoriaProducto_IdCategoriaProducto` INT NOT NULL,
  `CodigoDeBarras` VARCHAR(100) NOT NULL,
  `ValorProducto` INT NOT NULL,
  `StockProducto` INT NOT NULL,
  `NombreProducto` VARCHAR(60) NOT NULL,
  `FechaDeRegistroProducto` TIMESTAMP NOT NULL,
  `MarcaProducto` VARCHAR(55) NOT NULL,
  `FechaDeVencimiento` DATETIME NOT NULL,
  PRIMARY KEY (`IdProducto`),
  UNIQUE INDEX `idProductos_UNIQUE` (`IdProducto`),
  UNIQUE INDEX `CodigoDeBarras_UNIQUE` (`CodigoDeBarras`) ,
  INDEX `fk_Producto_CategoriaProducto1_idx` (`CategoriaProducto_IdCategoriaProducto`) ,
  CONSTRAINT `fk_Producto_CategoriaProducto1`
    FOREIGN KEY (`CategoriaProducto_IdCategoriaProducto`)
    REFERENCES `punto-de-venta-db`.`CategoriaProducto` (`IdCategoriaProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`Empleados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`Empleados` (
  `RutEmpleado` INT NOT NULL,
  `NombreEmpleado` VARCHAR(55) NOT NULL,
  `ApellidoEmpleado` VARCHAR(55) NOT NULL,
  `EdadEmpleado` INT NOT NULL,
  `NumeroTelefonoEmpleado` INT NOT NULL,
  PRIMARY KEY (`RutEmpleado`),
  UNIQUE INDEX `RutEmpleado_UNIQUE` (`RutEmpleado`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`Cargos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`Cargos` (
  `IdCargos` INT NOT NULL,
  `TipoDeCargo` ENUM('Gerente', 'Bodeguero') NOT NULL,
  `EstadoDelCargo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdCargos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`Usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`Usuarios` (
  `IdUsuarios` INT NOT NULL,
  `Empleados_RutEmpleado` INT NOT NULL,
  `Cargos_IdCargos` INT NOT NULL,
  `ContrasenaUsuario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdUsuarios`),
  INDEX `fk_Usuarios_Cargos1_idx` (`Cargos_IdCargos`) ,
  INDEX `fk_Usuarios_Empleados1_idx` (`Empleados_RutEmpleado`) ,
  UNIQUE INDEX `Empleados_RutEmpleado_UNIQUE` (`Empleados_RutEmpleado`) ,
  UNIQUE INDEX `IdUsuarios_UNIQUE` (`IdUsuarios`),
  CONSTRAINT `fk_Usuarios_Cargos1`
    FOREIGN KEY (`Cargos_IdCargos`)
    REFERENCES `punto-de-venta-db`.`Cargos` (`IdCargos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuarios_Empleados1`
    FOREIGN KEY (`Empleados_RutEmpleado`)
    REFERENCES `punto-de-venta-db`.`Empleados` (`RutEmpleado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`CategoriaBodegaUusuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`CategoriaBodegaUusuario` (
  `IdAccionesBodega` INT NOT NULL,
  `Producto_IdProducto` INT NOT NULL,
  `FechaAccionBodega` TIMESTAMP NOT NULL,
  `AccionBodega` ENUM('Agregar', 'Editar', 'Eliminar') NOT NULL,
  PRIMARY KEY (`IdAccionesBodega`),
  INDEX `fk_CategoriaBodegaUusuario_Producto1_idx` (`Producto_IdProducto`) ,
  CONSTRAINT `fk_CategoriaBodegaUusuario_Producto1`
    FOREIGN KEY (`Producto_IdProducto`)
    REFERENCES `punto-de-venta-db`.`Producto` (`IdProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`Bodegas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`Bodegas` (
  `IdBodega` INT NOT NULL,
  `CategoriaBodegaUusuario_IdAccionesBodega` INT NOT NULL,
  `NombreBodega` VARCHAR(55) NOT NULL,
  `UbicacionBodega` VARCHAR(65) NOT NULL,
  PRIMARY KEY (`IdBodega`),
  UNIQUE INDEX `NombreBodega_UNIQUE` (`NombreBodega` ) ,
  INDEX `fk_Bodegas_CategoriaBodegaUusuario1_idx` (`CategoriaBodegaUusuario_IdAccionesBodega` ) ,
  CONSTRAINT `fk_Bodegas_CategoriaBodegaUusuario1`
    FOREIGN KEY (`CategoriaBodegaUusuario_IdAccionesBodega`)
    REFERENCES `punto-de-venta-db`.`CategoriaBodegaUusuario` (`IdAccionesBodega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`AccionesProductos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`AccionesProductos` (
  `IdAccionesProductos` INT NOT NULL,
  `Usuarios_IdUsuarios` INT NOT NULL,
  `Producto_IdProducto` INT NOT NULL,
  `FechaAccionProductos` TIMESTAMP NOT NULL,
  `AccionProductos` ENUM('Registrar', 'Editar', 'Eliminar') NOT NULL,
  PRIMARY KEY (`IdAccionesProductos`),
  UNIQUE INDEX `Accion_UNIQUE` (`AccionProductos` ) ,
  INDEX `fk_AccionesProductos_Usuarios1_idx` (`Usuarios_IdUsuarios`),
  INDEX `fk_AccionesProductos_Producto1_idx` (`Producto_IdProducto`),
  CONSTRAINT `fk_AccionesProductos_Usuarios1`
    FOREIGN KEY (`Usuarios_IdUsuarios`)
    REFERENCES `punto-de-venta-db`.`Usuarios` (`IdUsuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AccionesProductos_Producto1`
    FOREIGN KEY (`Producto_IdProducto`)
    REFERENCES `punto-de-venta-db`.`Producto` (`IdProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`timestamps`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`timestamps` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL);


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`timestamps_1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`timestamps_1` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL);


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`user` (
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(32) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP);


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`AccionCategoriaProducto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`AccionCategoriaProducto` (
  `IdAccionCategoriaProducto` INT NOT NULL,
  `CategoriaProducto_IdCategoriaProducto` INT NOT NULL,
  `Usuarios_IdUsuarios` INT NOT NULL,
  `FechaAccionCategoriaProducto` TIMESTAMP NOT NULL,
  `AccionCategoriaProducto` ENUM('Registrar', 'Editar', 'Eliminar') NOT NULL,
  PRIMARY KEY (`IdAccionCategoriaProducto`),
  INDEX `fk_AccionCategoriaProducto_CategoriaProducto1_idx` (`CategoriaProducto_IdCategoriaProducto`),
  INDEX `fk_AccionCategoriaProducto_Usuarios1_idx` (`Usuarios_IdUsuarios`),
  CONSTRAINT `fk_AccionCategoriaProducto_CategoriaProducto1`
    FOREIGN KEY (`CategoriaProducto_IdCategoriaProducto`)
    REFERENCES `punto-de-venta-db`.`CategoriaProducto` (`IdCategoriaProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AccionCategoriaProducto_Usuarios1`
    FOREIGN KEY (`Usuarios_IdUsuarios`)
    REFERENCES `punto-de-venta-db`.`Usuarios` (`IdUsuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`AccionCategoriaBodegaUsuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`AccionCategoriaBodegaUsuario` (
  `IdAccionnCategoriaBodegaUsuario` INT NOT NULL,
  `CategoriaBodegaUusuario_IdAccionesBodega` INT NOT NULL,
  `Usuarios_IdUsuarios` INT NOT NULL,
  `FechaAccionnCategoriaBodegaUsuario` TIMESTAMP NOT NULL,
  `AccionnCategoriaBodegaUsuario` ENUM('Registrar', 'Editar', 'Eliminar') NOT NULL,
  PRIMARY KEY (`IdAccionnCategoriaBodegaUsuario`),
  INDEX `fk_AccionCategoriaProducto_copy1_CategoriaBodegaUusuario1_idx` (`CategoriaBodegaUusuario_IdAccionesBodega`),
  INDEX `fk_AccionCategoriaProducto_copy1_Usuarios1_idx` (`Usuarios_IdUsuarios`),
  CONSTRAINT `fk_AccionCategoriaProducto_copy1_CategoriaBodegaUusuario1`
    FOREIGN KEY (`CategoriaBodegaUusuario_IdAccionesBodega`)
    REFERENCES `punto-de-venta-db`.`CategoriaBodegaUusuario` (`IdAccionesBodega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AccionCategoriaProducto_copy1_Usuarios1`
    FOREIGN KEY (`Usuarios_IdUsuarios`)
    REFERENCES `punto-de-venta-db`.`Usuarios` (`IdUsuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `punto-de-venta-db`.`AccionBodega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `punto-de-venta-db`.`AccionBodega` (
  `IdAccionBodega` INT NOT NULL,
  `Usuarios_IdUsuarios` INT NOT NULL,
  `Bodegas_IdBodega` INT NOT NULL,
  `FechaAccionBodega` TIMESTAMP NOT NULL,
  `AccionBodega` ENUM('Registrar', 'Editar', 'Eliminar') NOT NULL,
  PRIMARY KEY (`IdAccionBodega`),
  INDEX `fk_AccionCategoriaProducto_copy1_Usuarios1_idx` (`Usuarios_IdUsuarios`),
  INDEX `fk_AccionCategoriaBodegaUsuario_copy1_Bodegas1_idx` (`Bodegas_IdBodega`),
  CONSTRAINT `fk_AccionCategoriaProducto_copy1_Usuarios10`
    FOREIGN KEY (`Usuarios_IdUsuarios`)
    REFERENCES `punto-de-venta-db`.`Usuarios` (`IdUsuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AccionCategoriaBodegaUsuario_copy1_Bodegas1`
    FOREIGN KEY (`Bodegas_IdBodega`)
    REFERENCES `punto-de-venta-db`.`Bodegas` (`IdBodega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
